{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_ALPHABETICALLY","SORT_BY_LENGTH","goodsFromServer","App","useState","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","changedGoods","sort","good1","good2","localeCompare","length","reverse","getChangedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAMMA,EAAsB,eACtBC,EAAiB,cA4BhB,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAzCR,SAAyBC,EAAOL,EAAUE,GACxC,IAAMI,EAAY,YAAOD,GAEzB,GAAIL,EACF,OAAQA,GACN,KAAML,EACJW,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAMb,EACJU,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UACzD,MAEF,QACE,OAAO,EAQb,OAJIT,GACFI,EAAaM,UAGRN,EAmBcO,CAAgBhB,EAAiBG,EAAUE,GAEhE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPd,IAAaL,EACT,GACA,YAENqB,QAAS,kBAAMf,EAAYN,IAP7B,iCAYA,wBACEoB,KAAK,SACLD,UAAS,4BACPd,IAAaJ,EACT,GACA,YAENoB,QAAS,kBAAMf,EAAYL,IAP7B,4BAYA,wBACEmB,KAAK,SACLD,UAAS,4BACPZ,EACI,GACA,YAENc,QAAS,WAILb,GAHGD,IART,qBAkBe,KAAbF,GAAmBE,EAEjB,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPf,EAAY,IACZE,GAAc,IALlB,mBAWA,QAIN,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e3a42ae.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\n// import { classNames as cn } from 'classnames';\n\nimport './App.scss';\nimport { useState } from 'react';\n\nconst SORT_ALPHABETICALLY = 'alpabet sort';\nconst SORT_BY_LENGTH = 'length sort';\n// const REVERSE = 'reverse';\n\nfunction getChangedGoods(goods, sortType, isReversed) {\n  const changedGoods = [...goods];\n\n  if (sortType) {\n    switch (sortType) {\n      case (SORT_ALPHABETICALLY):\n        changedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n\n      case (SORT_BY_LENGTH):\n        changedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n\n      default:\n        return 0;\n    }\n  }\n\n  if (isReversed) {\n    changedGoods.reverse();\n  }\n\n  return changedGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getChangedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            sortType === SORT_ALPHABETICALLY\n              ? ''\n              : 'is-light'\n          }`}\n          onClick={() => setSortType(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${\n            sortType === SORT_BY_LENGTH\n              ? ''\n              : 'is-light'\n          }`}\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${\n            isReversed\n              ? ''\n              : 'is-light'\n          }`}\n          onClick={() => {\n            if (!isReversed) {\n              setIsReversed(true);\n            } else {\n              setIsReversed(false);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        { sortType !== '' || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType('');\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : null\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}